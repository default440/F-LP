(defun penultimate(lst) (first (last lst 2)))

(defun fullength(lst)
    (setq len 0)
    (typecase lst
        (list (dolist (element lst) (setq len (+ len (fullength element)))))
        (t (setq len 1)))
    len
)

(defun myfunc(x n)
    (setq result '())
    (loop for i from 1 to n collect 
        (push (make-list 1 :initial-element x) result)
    )
    result
)

(setq lst1 '(1 2 3))
(setq lst2 '(1 (2 3) 4))
(write (penultimate lst1))
(terpri)
(write (fullength lst2))
(terpri)
(write (myfunc 2 3))
